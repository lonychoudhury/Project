{"ast":null,"code":"var _jsxFileName = \"/home/hp/whether/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = {\n  key: \"2cd096ae17a5551434eaf52e74deeb56\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nconst dateBuilder = d => {\n  let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  let day = days[d.getDay()];\n  let date = d.getDate();\n  let month = months[d.getMonth()];\n  let year = d.getFullYear();\n  return `${day} ${date} ${month} ${year}`;\n};\n\nfunction App() {\n  _s();\n\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState(null);\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`).then(res => res.json()).then(result => {\n        setWeather(result);\n        setQuery('');\n        console.log(result);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search\",\n          onChange: e => setQuery(e.target.value),\n          value: query,\n          onKeyPress: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"location\",\n        children: \"No such City exist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"location\",\n            children: [weather.name, \", \", weather.sys.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"date\",\n            children: dateBuilder(new Date())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"weather-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"temp\",\n            children: [Math.round(weather.main.temp), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather\",\n            children: weather.weather[0].main\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Eo4SqigbkV4GaTQ4ASnj1x2ezR8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/hp/whether/src/App.js"],"names":["React","useState","api","key","base","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","App","query","setQuery","weather","setWeather","error","setError","search","evt","fetch","then","res","json","result","console","log","e","target","value","name","sys","country","Date","Math","round","main","temp"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nconst api=\n{\n  key: \"2cd096ae17a5551434eaf52e74deeb56\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n}\nconst dateBuilder = (d) => {\n  let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n  let day = days[d.getDay()];\n  let date = d.getDate();\n  let month = months[d.getMonth()];\n  let year = d.getFullYear();\n\n  return `${day} ${date} ${month} ${year}`\n}\n\nfunction App() \n{\n\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState(null); \n  const [error, setError] = useState(null); \n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setWeather(result);\n          setQuery('');\n          console.log(result);\n        });\n    }\n  }\n  return (\n    <div className=\"app\">\n      <main>\n        <div className=\"search-box\">\n          <input \n          type=\"text\" placeholder=\"Search\"\n          onChange= {(e)=> setQuery(e.target.value)}\n          value= {query}\n          onKeyPress= {search}\n          />\n        </div>\n\n        {\n          error && \n          <div className=\"location\">\n            No such City exist\n          </div>\n        }\n\n        {\n        weather && \n        (\n        <div>\n          <div className=\"location-box\">\n            <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n            <div className=\"date\">{dateBuilder(new Date())}</div>\n          </div>\n          <div className=\"weather-box\">\n            <div className=\"temp\">\n              {Math.round(weather.main.temp)}Â°C\n            </div>\n            <div className=\"weather\">{weather.weather[0].main}</div>\n          </div>\n        </div>\n        )         \n        }\n\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}