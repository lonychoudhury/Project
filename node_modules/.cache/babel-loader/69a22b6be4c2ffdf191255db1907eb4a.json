{"ast":null,"code":"var _jsxFileName = \"/home/hp/project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [query, setQuery] = useState('');\n  const [food, setFood] = useState(null // { calories: '',\n  // carbohydrates_total_g: '',\n  // cholesterol_mg: '',\n  // fat_saturated_g: '',\n  // fat_total_g: '',\n  // fiber_g: '',\n  // name: '',\n  // potassium_mg: '',\n  // protein_g: '',\n  // serving_size_g: '',\n  // sodium_mg: '',\n  // sugar_g: '', }\n  );\n  const [error, setError] = useState('');\n  var options = {\n    method: 'GET',\n    url: 'https://calorieninjas.p.rapidapi.com/v1/nutrition',\n    params: {\n      query: query\n    },\n    headers: {\n      'x-rapidapi-host': 'calorieninjas.p.rapidapi.com',\n      'x-rapidapi-key': '2b42e0b829msh548ad463fe29e98p185282jsnad0888fb5232'\n    }\n  };\n\n  const search = async e => {\n    if (e.key === \"Enter\") {\n      await axios.request(options).then(response => {\n        const data = response.data.items;\n\n        if (data.length) {\n          const d = data[0];\n          setFood({\n            calories: d.calories,\n            carbohydrates_total_g: d.carbohydrates_total_g,\n            cholesterol_mg: d.cholesterol_mg,\n            fat_saturated_g: d.fat_saturated_g,\n            fat_total_g: d.fat_total_g,\n            fiber_g: d.fiber_g,\n            potassium_mg: d.potassium_mg,\n            protein_g: d.protein_g,\n            sodium_mg: d.sodium_mg,\n            name: d.name,\n            sugar_g: d.sugar_g\n          });\n          setError(null);\n        } else {\n          setError(\"Food item not found\");\n          setFood(null);\n        }\n      }).catch(function (error) {\n        setFood(null);\n        setError(error);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-box\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter Food Item\",\n          onChange: e => setQuery(e.target.value),\n          value: query,\n          onKeyPress: search\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: food && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\" \", food.name, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\" Calories : \", food.calories, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\" Carbohydrates in gram : \", food.carbohydrates_total_g, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\" Cholesterol in mg : \", food.cholesterol_mg, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\" Carbohydrates in gram : \", food.cholesterol_mg, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\" Saturated fat in gram : \", food.fat_saturated_g, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\" Total fat in gram : \", food.fat_total_g, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\" Fiber in gram : \", food.fiber_g, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\" Potassium in mg : \", food.potassium_mg, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\" Sodium in mg : \", food.sodium_mg, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\" Sugar in gram : \", food.sugar_g, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [error && error, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"uVBLkt44xAcFWw5waFFd5MFgK94=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/hp/project/src/App.js"],"names":["React","useState","axios","App","query","setQuery","food","setFood","error","setError","options","method","url","params","headers","search","e","key","request","then","response","data","items","length","d","calories","carbohydrates_total_g","cholesterol_mg","fat_saturated_g","fat_total_g","fiber_g","potassium_mg","protein_g","sodium_mg","name","sugar_g","catch","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction App() \n{\n  const [query, setQuery] = useState('');\n  const [food, setFood] = useState( null\n    // { calories: '',\n    // carbohydrates_total_g: '',\n    // cholesterol_mg: '',\n    // fat_saturated_g: '',\n    // fat_total_g: '',\n    // fiber_g: '',\n    // name: '',\n    // potassium_mg: '',\n    // protein_g: '',\n    // serving_size_g: '',\n    // sodium_mg: '',\n    // sugar_g: '', }\n    );\n  const [error, setError] = useState(''); \n\n  var options = {\n    method: 'GET',\n    url: 'https://calorieninjas.p.rapidapi.com/v1/nutrition',\n    params: {query: query},\n    headers: {\n      'x-rapidapi-host': 'calorieninjas.p.rapidapi.com',\n      'x-rapidapi-key': '2b42e0b829msh548ad463fe29e98p185282jsnad0888fb5232'\n    }\n  };\n  const search=async(e) =>\n  {\n    if (e.key === \"Enter\") {\n      await axios.request(options)\n      .then((response) => \n      {\n        const data= (response.data.items);\n        if(data.length)\n        {\n         const d= data[0];\n\n         setFood(\n          { \n          calories: d.calories,\n          carbohydrates_total_g: d.carbohydrates_total_g,\n          cholesterol_mg: d.cholesterol_mg,\n          fat_saturated_g: d.fat_saturated_g,\n          fat_total_g: d.fat_total_g,\n          fiber_g: d.fiber_g,\n          potassium_mg: d.potassium_mg,\n          protein_g: d.protein_g,\n          sodium_mg: d.sodium_mg,\n          name: d.name,\n          sugar_g: d.sugar_g, }\n         );\n         setError(null);\n        }\n        else\n        {\n          setError(\"Food item not found\");\n          setFood(null);      \n        }\n      }\n      )\n      .catch(function (error) {\n        setFood(null);\n        setError(error);\n      });\n    }         \n  }\n  return (\n    <div >\n      <main>\n        <div className=\"search-box\">\n          <input \n          type=\"text\" placeholder=\"Enter Food Item\"\n          onChange= {(e)=> setQuery(e.target.value)}\n          value= {query}\n          onKeyPress= {search}\n          />\n        </div>\n        <div>\n          {\n            food && \n            <div>\n              <h1> {food.name} </h1>\n              <ul>\n              <li> Calories : {food.calories} </li>\n              <li> Carbohydrates in gram : {food.carbohydrates_total_g} </li>\n              <li> Cholesterol in mg : {food.cholesterol_mg} </li>\n              <li> Carbohydrates in gram : {food.cholesterol_mg} </li>\n              <li> Saturated fat in gram : {food.fat_saturated_g} </li>\n              <li> Total fat in gram : {food.fat_total_g} </li>\n              <li> Fiber in gram : {food.fiber_g} </li>\n              <li> Potassium in mg : {food.potassium_mg} </li>\n              <li> Sodium in mg : {food.sodium_mg} </li>\n              <li> Sugar in gram : {food.sugar_g} </li>   \n              </ul>  \n            </div>       \n          } \n          </div>\n        <div>{error && error} </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}